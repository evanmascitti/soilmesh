% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orient_sample.R
\name{orient_sample}
\alias{orient_sample}
\title{Orient a 3D mesh in real-world coordinates}
\usage{
orient_sample(mesh, rot_tr_matr)
}
\arguments{
\item{mesh}{a "mesh3d" object}

\item{rot_tr_matr}{a 4x4 matrix}
}
\value{
the rotated and translated "mesh3d" object
}
\description{
The EinScan SP records points in a coordinate system where the camera eye is
(0,0,0). This is the first step in the pipeline, prior to other cleaning
operations (these are threefold: removing the sample holder; adjusting the x
and y coordinates so the specimen is precisely centered; moving the mesh up
or down so its original/undisturbed surface lies in the x-y plane)
}
\details{
\code{orient_sample()} takes a "mesh3d" object and a 4x4 matrix as inputs and
passes them to \link[Morpho:applyTransform]{Morpho::applyTransform}. The matrix can be specified three
ways, in order of increasing preference:
\enumerate{
\item Saved as an .rda file so can be accessed any time \strong{soilmesh} is loaded
\item Converted from a .csv or other flat file, then converted to a matrix with
\code{as.matrix()} 3. Manually inputted with \code{matrix()}
}

Every time the scanner is moved or re-calibrated, a new matrix must be
computed. This function is designed to make that process less of a pain and
to ensure the entire pipeline is not broken irreversibly by accidentally
bumping the scanner.
}
\examples{
orient_sample(mesh = untrimmed_mesh1, rot_tr_matr = method_development_rtmatrix)
}
